# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - chentest

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  DOTNET_CORE_VERSION: 6.0.x
  WORKING_DIRECTORY: ReviewGenerator       # ReviewGenerator is root folder of project, it include all files (source, bin etc)
  CONFIGURATION: Release
  #AZURE_WEBAPP_PACKAGE_PATH: ReviewGenerator\published       # ReviewGenerator is root folder of project, it include all files (source, bin etc)
  AZURE_WEBAPP_PACKAGE_PATH: ReviewGenerator\test\published       # ReviewGenerator is root folder of project, it include all files (source, bin etc)
  AZURE_WEBAPP_NAME: chentest
  
jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          #dotnet-version: '6.0.x'                          # working
          ##include-prerelease: true                        # no need
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}    # working

      - name: Restore dependencies
        #run: dotnet restore .                              # not working
        #run: dotnet restore ${{ env.WORKING_DIRECTORY }}   # working too. but if there is space in the papth, then "" will prevent error.
        run: dotnet restore "${{ env.WORKING_DIRECTORY }}"  # working. need to put it in a working directory; otherwise, not working.
        
      - name: Build with dotnet
        #run: dotnet build --configuration Release                # not working
        #run: dotnet build --configuration Release --no-restore   # not working
        #run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration Release --no-restore                         # working. need to put it in a working directory; otherwise, not working.
        run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore         # working too. need to put it in a working directory; otherwise, not working.

      #- name: Test                                                       # no need
      #  run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build       # no need

      - name: dotnet publish
        #run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration Release --no-build --output ${{env.DOTNET_ROOT}}/myapp                                      # working. need to publish it from a working directory; otherwise, not working.
        #run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output ${{env.DOTNET_ROOT}}/myapp                     # working. need to publish it from a working directory; otherwise, not working.
        run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"          # working. need to publish it from a working directory; otherwise, not working.

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
        #  path: ${{env.DOTNET_ROOT}}/myapp                   # working
        #  path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}          # working
        #  path: ./ReviewGenerator                             # working, but upload all root folder files, not good.
          path: ReviewGenerator/test

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          #app-name: 'chentest'                                 # working
          app-name: ${{ env.AZURE_WEBAPP_NAME }}                # working
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_70F5BCA9DA8F4672907E66B59B3AF28C }}
          package: .          # working
          #package: ./test     # not working
